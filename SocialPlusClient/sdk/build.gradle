/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'com.google.gms.google-services' // applied at bottom of file to avoid dependency collisions

android {
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }
    publishNonDefault true
    compileSdkVersion 23
    buildToolsVersion '22.0.1'
    resourcePrefix 'sp_'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        buildConfigField "com.microsoft.socialplus.server.ServerConfig", "SERVER", "com.microsoft.socialplus.server.ServerConfig.STAGING"
        signingConfig signingConfigs.debug
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "STANDALONE_APP", "false"
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "STANDALONE_APP", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debugStandalone.initWith(buildTypes.debug)
        debugStandalone {
            buildConfigField "boolean", "STANDALONE_APP", "true"
            signingConfig signingConfigs.debug
        }
        releaseStandalone.initWith(buildTypes.release)
        releaseStandalone {
            buildConfigField "boolean", "STANDALONE_APP", "true"
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            res.srcDirs 'src/main/res', 'src/main/res-public'
        }
    }
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File((File) outputFolder, "SocialPlus_SDK_$variant.buildType.name" + '.aar')
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'
    compile 'com.google.android.gms:play-services-gcm:9.4.0'
    compile 'com.google.android.gms:play-services-auth:9.4.0'
    compile 'net.openid:appauth:0.3.0'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.okhttp3:okhttp:3.1.2'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:support-annotations:23.4.0'
    compile 'de.hdodenhof:circleimageview:1.2.2'
    compile 'com.facebook.android:facebook-android-sdk:4.0.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.floreysoft:jmte:3.1.1'
    compile 'com.github.chrisbanes.photoview:library:1.2.3'
    // for autorest
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.0.4'
    compile 'joda-time:joda-time:2.3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.1.2'
    compile 'com.google.guava:guava:15.0'
    compile 'com.microsoft.rest:client-runtime:1.0.0-beta1'
    compile project(':SocialPlus_Autorest_debug')
}

retrolambda {
    jvmArgs '-noverify'
}
ext {
    outputFolder = new File((File) project.getProjectDir(), "aar")
}

def clearOutputFolder() {
    File[] files = outputFolder.listFiles()
    if (files != null) {
        for (File file : files) {
            file.delete()
        }
    }
}

clearOutputFolder()

apply plugin: 'com.google.gms.google-services'
